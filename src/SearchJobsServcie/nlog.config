<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="true"
      internalLogLevel="Trace" internalLogFile="c:\temp\nlog-internal.log">

  <targets>

    <!-- Archivo de logs -->
    <target name="logfile" xsi:type="File"
            fileName="c:\logs\${gdc:item=MicroserviceName}\${gdc:item=MicroserviceName}_log_${shortdate}.log"
            layout="${longdate} | MachineName=${machinename:lowercase=true} | Layer=${event-properties:item=Layer} | Action=${event-properties:item=Action} | ${level} | ${logger} | ${message} ${exception}" />

    <!-- Consola -->
    <target name="logconsole" xsi:type="Console"
            layout="${longdate} | MachineName=${machinename:lowercase=true} | Layer=${event-properties:item=Layer} | Action=${event-properties:item=Action} | ${level} | ${logger} | ${message} ${exception}" />

    <!-- ApplicationLogs -->
    <target name="DatabaseGeneralLog" xsi:type="Database" connectionString="Server=.;Database=OCC_Clone;User Id=sa;Password=wagner;TrustServerCertificate=True;"
        commandText="INSERT INTO ApplicationLogs ([IdCorrelation], [MicroserviceName], [Environment], [LogDate], [ExceptionMessage], [LogLevel], [LoggerName], [Message], [ExceptionStackTrace ], [ThreadId])
                     VALUES (@IdCorrelation, @MicroserviceName, @Environment, @LogDate, @ExceptionMessage, @LogLevel, @LoggerName, @Message, @ExceptionStackTrace , @ThreadId);" >
      <parameter name="@IdCorrelation" layout="${gdc:item=IdCorrelation}" />
      <parameter name="@MicroserviceName" layout="${gdc:item=MicroserviceName}" />
      <parameter name="@Environment" layout="${gdc:item=Environment}" />
      <parameter name="@LogDate" layout="${date}" />
      <parameter name="@ExceptionMessage" layout="${exception}" />
      <parameter name="@LogLevel" layout="${uppercase:${level}}" />
      <parameter name="@LoggerName" layout="${logger:shortName=true}" />
      <parameter name="@Message" layout="${message:raw=true}" />
      <parameter name="@ExceptionStackTrace " layout="${stacktrace}" />
      <parameter name="@ThreadId" layout="${threadid}" />
    </target>

    <!-- EventDetailsLogs -->
    <target name="DatabaseAppLog" xsi:type="Database" connectionString="Server=.;Database=OCC_Clone;User Id=sa;Password=wagner;TrustServerCertificate=True;"
        commandText="INSERT INTO EventDetailsLogs ([IdCorrelation], [MethodName ], [CallSite], [MachineName], [Username])
                     VALUES (@IdCorrelation, @MethodName , @CallSite, @MachineName, @Username);" >
      <parameter name="@IdCorrelation" layout="${gdc:item=IdCorrelation}" />
      <parameter name="@MethodName " layout="${aspnet-request-method}" />
      <parameter name="@CallSite" layout="${callsite}" />
      <parameter name="@MachineName" layout="${machinename}" />
      <parameter name="@Username" layout="${environment-user}" />
    </target>

    <!-- ErrorDetailsLogs -->
    <target name="DatabaseErrorLog" xsi:type="Database" connectionString="Server=.;Database=OCC_Clone;User Id=sa;Password=wagner;TrustServerCertificate=True;"
        commandText="INSERT INTO ErrorDetailsLogs ([IdCorrelation], [ServerName], [LineNumber], [FileName], [LogDate])
                     VALUES (@IdCorrelation, @ServerName, @LineNumber, @FileName, @LogDate);" >
      <parameter name="@IdCorrelation" layout="${gdc:item=IdCorrelation}" />
      <parameter name="@ServerName" layout="${hostname}" />
      <parameter name="@LineNumber" layout="${event-properties:LineNumber}" />
      <parameter name="@FileName" layout="${event-properties:FileName}" />
      <parameter name="@LogDate" layout="${date}" />
    </target>

  </targets>

  <rules>
    <logger name="*" minlevel="Error" writeTo="logfile">
      <filters>
        <when condition="contains('${event-properties:item=Action}', 'RequestSizeLimit')" action="Log" />
        <when condition="contains('${event-properties:item=Action}', 'RabbitMQ')" action="Log" />
        <when condition="contains('${event-properties:item=Action}', 'EventHandlerRegistration')" action="Log" />
      </filters>
    </logger>
    <logger name="*" minlevel="Error" writeTo="logconsole" />
    <logger name="*" minlevel="Error" writeTo="DatabaseGeneralLog" />
    <logger name="*" minlevel="Error" writeTo="DatabaseAppLog" />
    <logger name="*" minlevel="Error" writeTo="DatabaseErrorLog" />
  </rules>
</nlog>
